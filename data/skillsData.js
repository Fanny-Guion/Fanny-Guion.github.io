const skills = [

    {
        name: "HTML",
        background: "Bureau_3_1_HTML.jpg",
        description: [" Le langage HTML : un pour les gouverner tous !"," La base du langage, premiers pas √©mus dans l'indispensable structure des pages web, qui ne serait rien (ou presque), sans son travail en √©troite collaboration avec le CSS."],
        score: "‚≠ê‚≠ê‚≠ê‚≠ê",
        methods: ["link", "BEM", "balise", "formulaire", "script"],
        logo:"logo_HTML.png"
    },

    {
        name: "CSS",
        background: "Bureau_3_2_CSS.jpg",
        description: ["Le CSS : le fid√®le compagnon du html ! (le style des pages ne se ferait pas sans lui)"," Une fois les bases acquises, et les complexit√©s 'ma√Ætris√©' (flex, transition, responsive,...) : tout devient possible... tout !","Le plaisir d'une mise en forme r√©ussie üòä."],
        score: "‚≠ê‚≠ê‚≠ê‚≠ê",
        methods: ["display", "position", "hover", "sprite", "transition", "responsive",".stylelint"],
        logo:"logo_CSS.png"
    },

    {
        name: "JS",
        background: "Bureau_3_3_JS.jpg",
        description: ["Le JavaScript : l√†, on entre dans ma partie pr√©f√©r√©e !","La recherche des √©l√©ments d'un tableau, Les fonctions, les instructions, la manipulation du DOM... en somme, les premi√®res joies de rechercher pendant des heures une virgule perdue ü§£. ",""],
        score: "‚≠ê‚≠ê‚≠ê‚≠ê",
        methods: ["tableau", "fonction", "instruction", "DOM", "√©v√®nement", "modularisation"],
        logo:"logo_JS.png"
    },

    {
        name: "NODE",
        background: "Bureau_3_4_NODE.jpg",
        description: ["NODE : √† la d√©couverte de la mise en r√©seau (merci √† Ryan Dahl) ! ","Permettant l‚Äôex√©cution de JS c√¥t√© serveur, gr√¢ce √† V8, entre le require des modules natifs, tiers & 'maisons', le html-css-js se mettent en fin √† la page üòÅ."," La modularisation quant √† elle permet une SOC rigoureuse."],
        score: "‚≠ê‚≠ê‚≠ê",
        methods: ["require", "readline & create Interface", "question & on", "router", "server", "package.json", ".env", "node_module", "express", "ejs, dayjs, ..."],
        logo:"logo_NODE.png"    
    },

    {
        name: "DATA",
        background: "Bureau_3_5_DATA.jpg",
        description: ["DATA : bien g√©rer une base de donn√©es relationnelle !","La m√©thode merise m'a permise de bien conceptualiser l'application. Puis le langage SQL (via le SGBD postgres), ses requ√™tes, et leur mise en place par le dataMapper puis par model-view-controller l'ont rendue tr√®s concr√®te."],
        score: "‚≠ê‚≠ê‚≠ê‚≠ê",
        methods: ["MCD ,MLD, MLP", "postgres", "SQL & associations", "database", "dataMapper/MVC", "constructor", "middleware", "static, engine", "session", "async/await"],
        logo:"logo_DATA.png" 
    },
    
    {
        name: "Sequelize",
        background: "Bureau_3_6_Sequelize.jpg",
        description: [ "En avant pour sequelize (on jette tout et on recommence) !","Sequelize est un ORM qui m'a grandement facilit√© la vie, puisque il poss√®de des requ√™tes int√©gr√©es : FindAll, findByPk,...","En parall√®le l'apprentissage de try/catch m'a aussi permis de limiter les if en sapin üéÑ."],
        score: "‚≠ê‚≠ê‚≠ê",
        methods: ["sequelize", "try/catch"],
        logo:"logo_SEQUELIZE.png"
    },

    {
        name: "API",
        background: "Bureau_3_7_API.jpg",
        description: ["AJAX : √©viter de recharger les pages web !","REST m'a permis de d√©couvrir les m√©thodes PUT, PATCH & DELETE (en plus de GET & POST).","L'API fetch (& cors) m'a fournit une interface de requ√™tes pour les BDD web."],
        score: "‚≠ê‚≠ê‚≠ê‚≠ê",
        methods: ["AJAX", "fetch", "API Rest", "(Insomnia, Rest client)"],
        logo:"logo_API.png"  
    },

    {
        name: "SPA",
        background: "Bureau_3_8_SPA.jpg",
        description: ["SPA : mettre √† jour le contenu d'une page !", "L'impl√©mentation SPA m'a donn√© l'occasion de pouvoir mettre √† jour les donn√©es d'une page. Combin√© avec les modules bundler (fusionner) et watcher (gr√¢ce √† .vue, lit et interagit) cela donne une interaction compl√®te."],
        score: "‚≠ê‚≠ê‚≠ê",
        methods: ["HTML templates", "bundler", "watcher"],
        logo:"logo_AJAX.png" 
    },

    {
        name: "D√©ploiement",
        background: "Bureau_3_9_Deploiement.jpg",
        description: ["D√©ploiement : finalit√© du tout en un !","Le CMS est tr√®s pratique, car √† partir d'une BDD il permet de g√©rer l‚Äôapparence et le contenu d‚Äôun site, et de 'r√©viser' tout le code (html, css, js...). Et pourquoi ne pas utiliser un NoSQL ? Mais cela est un autre d√©bat ü§£."],
        score: "‚≠ê‚≠ê‚≠ê",
        methods: ["CMS", "release", "NoSQL"],
        logo:"logo_NoSQL.png"
    },

    {
        name: "GitHub",
        background: "Bureau_3_10_GitHub.jpg",
        description: ["GitHub : l'absolu collaboration et versionnage !","Ce qui m'a le plus plu, en plus des fonctionnalit√©s √©videntes li√©es √† la gestion des repos, c'est qu'il y a aussi la possibilit√© de faire de la gestion de projets, √† partir des 12 principes de la m√©thode Agile, gr√¢ce au kanban int√©gr√©."],
        score: "‚≠ê‚≠ê‚≠ê",
        methods: ["Agile", "gestion de projet", "repositories", "clone", "pull", "branch & checkout", "add-commit-push", "issue", "pull request"],
        logo:"logo_GitHub.png"  
    },
    
    {
        name: "VisualBasic",
        background: "Bureau_3_11_VisualBasic.jpg",
        description: ["Visual Basic : Premiers pas vers le code !","Mon 1er m√©tier, impliquait de nombreuses r√©p√©titions. Ce qui m'a naturellement amen√© √† apprendre en autodidacte VBA, autant pour ses fonctions, que pour la cr√©ation de logiciels de comptabilit√©s."],
        score: "‚≠ê‚≠ê‚≠ê",
        methods: ["sub", "fonction","msgbox", "if... else", "for (each)", "while", "VBProject", "VBComponents","Ucase","split", "DoEvents"],
        logo:"logo_VisualBasic.png"  
    }
]